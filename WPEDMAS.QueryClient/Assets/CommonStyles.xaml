<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:localViews="clr-namespace:WPEDMAS.QueryClient.Views"
                    xmlns:query="http://schemas.sharewin.com/2015/xaml/query"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:TabControl="clr-namespace:Telerik.Windows.Controls.TabControl;assembly=Telerik.Windows.Controls.Navigation"
                    xmlns:fa="http://schemas.fontawesome.io/icons/">
    <!-- 查询项列表样式 -->
    <Style x:Key="QueryKindListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="#FFFBFDFF"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="#FF858181"></Setter>
        <Setter Property="Padding" Value="10,5,0,5"></Setter>
        <Setter Property="GroupStyleExtensions.Append">
            <Setter.Value>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Viewbox Width="20" Height="20" Stretch="Uniform">
                                    <Path Name="Icon" Fill="#FF3D73D7" Height="26" Width="27"
                                          Data="F1M12.287,4.555C8.582,4.555 5.578,7.539 5.578,11.221 5.578,14.902 8.582,17.886 12.287,17.886 15.992,17.886 18.995,14.902 18.995,11.221 18.995,7.539 15.992,4.555 12.287,4.555z M12.287,1C17.968,1 22.573,5.576 22.573,11.221 22.573,13.136 22.034,14.921 21.111,16.453 21.111,16.453 26,21.547 26,21.547 26,21.547 23.411,24 23.411,24 23.411,24 18.762,19.157 18.762,19.157 16.994,20.584 14.742,21.441 12.287,21.441 6.606,21.441 2,16.865 2,11.221 2,5.576 6.606,1 12.287,1z"></Path>
                                </Viewbox>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Name}"
                                             Value="条件查询">
                                    <Setter Property="Data" TargetName="Icon" Value="F1M2,15.5C2,15.5 7,15.5 7,15.5 7,15.5 7,18.875 7,18.875 7,18.875 2,18.875 2,18.875 2,18.875 2,15.5 2,15.5z M2,8.75C2,8.75 7,8.75 7,8.75 7,8.75 7,12.125 7,12.125 7,12.125 2,12.125 2,12.125 2,12.125 2,8.75 2,8.75z M18.858,5.733C16.388,5.733 14.385,7.923 14.385,10.624 14.385,13.325 16.388,15.514 18.858,15.514 21.328,15.514 23.33,13.325 23.33,10.624 23.33,7.923 21.328,5.733 18.858,5.733z M10,2C10,2 20,2 20,2 20,2 20,2.211 20,2.527L20,3.377 21.527,3.714C23.989,4.853 25.716,7.517 25.716,10.624 25.716,12.029 25.356,13.339 24.741,14.463 24.741,14.463 28,18.2 28,18.2 28,18.2 26.274,20 26.274,20 26.274,20 23.175,16.447 23.175,16.447 22.585,16.97 21.916,17.389 21.188,17.677L20,17.905 20,18.375C20,18.675 20,18.875 20,18.875 20,18.875 10,18.875 10,18.875 10,18.875 10,15.5 10,15.5 10,15.5 11.218,15.5 12.436,15.5L13.746,15.5 12.539,13.543 12.277,12.125 11.488,12.125C10.744,12.125 10,12.125 10,12.125 10,12.125 10,8.75 10,8.75 10,8.75 10.877,8.75 11.754,8.75L12.346,8.75 12.539,7.705 13.975,5.375 13.164,5.375C11.406,5.375 10,5.375 10,5.375 10,5.375 10,2 10,2z M2,2C2,2 7,2 7,2 7,2 7,5.375 7,5.375 7,5.375 2,5.375 2,5.375 2,5.375 2,2 2,2z" />
                                    <Setter Property="Height" TargetName="Icon" Value="22"/>
                                    <Setter Property="Width" TargetName="Icon" Value="29"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Name}" 
                                             Value="数据概览">
                                    <Setter Property="Data" TargetName="Icon" Value="F1M9,20C9,20 19,20 19,20 19,20 19,22 19,22 19,22 9,22 9,22 9,22 9,20 9,20z M9,17C9,17 22,17 22,17 22,17 22,19 22,19 22,19 9,19 9,19 9,19 9,17 9,17z M1,17C1,17 6,17 6,17 6,17 6,22 6,22 6,22 1,22 1,22 1,22 1,17 1,17z M9,12C9,12 19,12 19,12 19,12 19,14 19,14 19,14 9,14 9,14 9,14 9,12 9,12z M9,9C9,9 22,9 22,9 22,9 22,11 22,11 22,11 9,11 9,11 9,11 9,9 9,9z M1,9C1,9 6,9 6,9 6,9 6,14 6,14 6,14 1,14 1,14 1,14 1,9 1,9z M9,4C9,4 19,4 19,4 19,4 19,6 19,6 19,6 9,6 9,6 9,6 9,4 9,4z M9,1C9,1 22,1 22,1 22,1 22,3 22,3 22,3 9,3 9,3 9,3 9,1 9,1z M1,1C1,1 6,1 6,1 6,1 6,6 6,6 6,6 1,6 1,6 1,6 1,1 1,1z"/>
                                    <Setter Property="Height" TargetName="Icon" Value="23"/>
                                    <Setter Property="Width" TargetName="Icon" Value="23"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Name}" 
                                             Value="台账查询">
                                    <Setter Property="Data" TargetName="Icon" Value="F1M5.555,18.283C5.087,18.283 4.708,18.655 4.708,19.113 4.708,19.572 5.087,19.944 5.555,19.944 5.555,19.944 11.987,19.944 11.987,19.944 12.455,19.944 12.834,19.572 12.834,19.113 12.834,18.655 12.455,18.283 11.987,18.283 11.987,18.283 5.555,18.283 5.555,18.283z M22.857,14.7C21.004,14.7 19.502,16.127 19.502,17.888 19.502,19.649 21.004,21.076 22.857,21.076 24.709,21.076 26.211,19.649 26.211,17.888 26.211,16.127 24.709,14.7 22.857,14.7z M5.724,13.963C5.163,13.963 4.708,14.409 4.708,14.96 4.708,15.51 5.163,15.956 5.724,15.956 5.724,15.956 10.125,15.956 10.125,15.956 10.125,15.956 11.818,15.956 11.818,15.956 11.818,15.956 12.157,15.956 12.157,15.956 12.157,15.956 13.511,15.956 13.511,15.956 13.511,15.956 14.527,15.956 14.527,15.956 15.088,15.956 15.542,15.51 15.542,14.96 15.542,14.409 15.088,13.963 14.527,13.963 14.527,13.963 12.157,13.963 12.157,13.963 12.157,13.963 11.818,13.963 11.818,13.963 11.818,13.963 10.125,13.963 10.125,13.963 10.125,13.963 5.724,13.963 5.724,13.963z M22.857,13C25.697,13 28,15.188 28,17.888 28,20.588 25.697,22.776 22.857,22.776 21.629,22.776 20.503,22.366 19.619,21.684 19.619,21.684 17.295,24 17.295,24 17.295,24 16,22.827 16,22.827 16,22.827 18.444,20.391 18.444,20.391 17.983,19.658 17.713,18.804 17.713,17.888 17.713,15.188 20.016,13 22.857,13z M3.016,3.994C3.016,3.994 4.708,3.994 4.708,3.994 4.708,3.994 4.708,4.991 4.708,4.991 4.708,6.092 5.618,6.985 6.74,6.985 7.862,6.985 8.771,6.092 8.771,4.991 8.771,4.991 8.771,3.994 8.771,3.994 8.771,3.994 9.787,3.994 9.787,3.994 9.787,3.994 9.787,4.991 9.787,4.991 9.787,6.092 10.696,6.985 11.818,6.985 12.94,6.985 13.85,6.092 13.85,4.991 13.85,4.991 13.85,3.994 13.85,3.994 13.85,3.994 14.865,3.994 14.865,3.994 14.865,3.994 14.865,4.991 14.865,4.991 14.865,6.092 15.775,6.985 16.897,6.985 18.018,6.985 18.928,6.092 18.928,4.991 18.928,4.991 18.928,3.994 18.928,3.994 18.928,3.994 20.621,3.994 20.621,3.994 21.182,3.994 21.636,4.44 21.636,4.991 21.636,4.991 21.636,11.101 21.636,11.101 20.454,11.082 19.424,11.185 18.56,11.391 18.78,11.208 18.928,10.945 18.928,10.64 18.928,10.089 18.473,9.643 17.912,9.643 17.912,9.643 5.724,9.643 5.724,9.643 5.163,9.643 4.708,10.089 4.708,10.64 4.708,11.19 5.163,11.637 5.724,11.637 5.724,11.637 17.724,11.637 17.724,11.637 15.146,12.573 14.631,14.579 16.788,16.572 16.788,16.572 9.997,23.267 9.997,23.267 9.997,23.267 3.016,23.267 3.016,23.267 2.455,23.267 2,22.821 2,22.27 2,22.27 2,4.991 2,4.991 2,4.44 2.455,3.994 3.016,3.994z M6.74,2C7.301,2 7.756,2.446 7.756,2.997 7.756,2.997 7.756,4.991 7.756,4.991 7.756,5.541 7.301,5.988 6.74,5.988 6.179,5.988 5.724,5.541 5.724,4.991 5.724,4.991 5.724,2.997 5.724,2.997 5.724,2.446 6.179,2 6.74,2z M16.897,2C17.458,2 17.912,2.446 17.912,2.997 17.912,2.997 17.912,4.991 17.912,4.991 17.912,5.541 17.458,5.988 16.897,5.988 16.336,5.988 15.881,5.541 15.881,4.991 15.881,4.991 15.881,2.997 15.881,2.997 15.881,2.446 16.336,2 16.897,2z M11.818,2C12.379,2 12.834,2.446 12.834,2.997 12.834,2.997 12.834,4.991 12.834,4.991 12.834,5.541 12.379,5.988 11.818,5.988 11.257,5.988 10.803,5.541 10.803,4.991 10.803,4.991 10.803,2.997 10.803,2.997 10.803,2.446 11.257,2 11.818,2z"/>
                                    <Setter Property="Height" TargetName="Icon" Value="25"/>
                                    <Setter Property="Width" TargetName="Icon" Value="29"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Name}" 
                                             Value="报表生成">
                                    <Setter Property="Data" TargetName="Icon" Value="F1M20.167,25.903C20.167,25.953 20.167,26 20.167,26 20.167,26 19.208,26 19.208,26 19.537,26 19.857,25.966 20.167,25.903z M5,20C5,20 9,20 9,20 9,20 9,21 9,21 9,21 5,21 5,21 5,21 5,20 5,20z M5,18C5,18 12,18 12,18 12,18 12,19 12,19 12,19 5,19 5,19 5,19 5,18 5,18z M21.953,17.346C19.29,18.575 17.6,22.263 17.6,22.263 17.6,22.263 16.561,20.448 16.561,20.448 16.561,20.448 14.417,21.619 14.417,21.619 15.326,21.911 16.626,22.848 17.73,24.077 18.51,22.789 20.914,20.156 22.083,19.921 21.629,18.985 21.888,18.224 21.953,17.346z M5,16C5,16 9,16 9,16 9,16 9,17 9,17 9,17 5,17 5,17 5,17 5,16 5,16z M9,6C11.117,6 13,7.876 13,10 13,12.124 11.117,14 9,14 6.883,14 5,12.124 5,10 5,10 9,10 9,10 9,10 9,6 9,6z M8,5C8,5 8,9 8,9 8,9 4,9 4,9 4,6.876 5.883,5 8,5z M2.917,2.923C2.917,2.923 2.917,24.077 2.917,24.077 2.917,24.077 14.694,24.077 14.694,24.077 13.934,23.16 13.458,21.997 13.458,20.712 13.458,17.955 15.317,16.247 18,16 18,16 18,8 18,8 18,8 14,8 14,8 14,8 14,3 14,3 14,3 2.917,2.923 2.917,2.923z M1,1C1,1 13.5,1 13.5,1 13.5,1 20.167,7.682 20.167,7.738 20.167,10.174 20,13.327 20,16 22.207,16.631 24,18.294 24,20.712 24,23.543 21.777,25.834 18.99,25.974 19.065,25.977 19.133,26 19.208,26 19.208,26 1,26 1,26 1,26 1,1 1,1z"/>
                                    <Setter Property="Height" TargetName="Icon" Value="27"/>
                                    <Setter Property="Width" TargetName="Icon" Value="25"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Name}"  Value="措施统计分析">
                                    <Setter Property="Data" TargetName="Icon" Value="F1M2.991,13L2.985,13.567C2.972,14.978,2.952,17.094,2.936,18.857L2.915,21.087 3.998,21.087C4.418,21.087,4.892,21.087,5.41,21.087L7,21.087 7,20.5C7,19,7,17,7,15L7,13 5,13z M9,8L9,9.5C9,12.312,9,16.883,9,19.915L9,21.087 13,21.087C14.38,21.087,15.76,21.087,17.054,21.087L18,21.087 18,19.031C18,17.25,18,14.875,18,12.5L18,10 16.5,10 15,10 15,11.43C15,15.531 15,21 15,21 15,21 13,21 13,21 13,21 13,13.125 13,9.188L13,8 11,8z M20.625,3C20.25,3,20,3,20,3L20,4.281C20,8.711,20,16.463,20,20.062L20,21.087 20.59,21.087C21.625,21.087,22.488,21.087,23.091,21.087L23.094,21.087 23.094,18.896C23.094,15.135,23.094,8.865,23.094,5.104L23.094,3 22,3C21.5,3,21,3,20.625,3z M20,1C20,1 24.04,1 24.04,1 24.04,1 24.038,1.125 24.034,1.312L24.021,1.969 24.047,1.969C24.524,1.969 25,1.969 25,1.969 25,1.969 25,22.031 25,22.031 25,22.031 24.524,22.031 24.047,22.031L24.027,22.031 24.02,22.544C24.01,23.272 24,24 24,24 24,24 2,24 2,24 2,24 1.99,23.272 1.98,22.544L1.973,22.031 1.953,22.031C1.477,22.031 1,22.031 1,22.031 1,22.031 1,12 1,12 1,12 1.125,12 1.313,12L2,12C2,11.5 2,11 2,11 2,11 3.5,11 5,11L7,11 7,9.5C7,8 7,7 7,7 7,7 7.5,7 8,7 8,6.5 8,6 8,6 8,6 14,6 14,6 14,6 14,6.5 14,7 14.5,7 15,7 15,7 15,7 15,7.219 15,7.602L15,8 16.5,8 18,8 18,5.969C18,4.188 18,3 18,3 18,3 20,1 20,1z"/>
                                    <Setter Property="Height" TargetName="Icon" Value="28"/>
                                    <Setter Property="Width" TargetName="Icon" Value="28"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Name}" 
                                             Value="工艺指标计算">
                                    <Setter Property="Data" TargetName="Icon" Value="F1M14.2,21.28C14.2,21.28 16.4,21.28 16.4,21.28 16.4,21.28 16.4,27 16.4,27 16.4,27 14.2,27 14.2,27 14.2,27 14.2,21.28 14.2,21.28z M18.6,20.009C18.6,20.009 20.8,20.009 20.8,20.009 20.8,20.009 20.8,27 20.8,27 20.8,27 18.6,27 18.6,27 18.6,27 18.6,20.009 18.6,20.009z M9.8,18.738C9.8,18.738 12,18.738 12,18.738 12,18.738 12,27 12,27 12,27 9.8,27 9.8,27 9.8,27 9.8,18.738 9.8,18.738z M1,18.738C1,18.738 3.2,18.738 3.2,18.738 3.2,18.738 3.2,27 3.2,27 3.2,27 1,27 1,27 1,27 1,18.738 1,18.738z M5.4,15.56C5.4,15.56 7.6,15.56 7.6,15.56 7.6,15.56 7.6,27 7.6,27 7.6,27 5.4,27 5.4,27 5.4,27 5.4,15.56 5.4,15.56z M14.2,6C11.77,6 9.8,7.791 9.8,10 9.8,12.209 11.77,14 14.2,14 16.63,14 18.6,12.209 18.6,10 18.6,7.791 16.63,6 14.2,6z M12.6,2C12.6,2 15.8,2 15.8,2 15.8,2 15.8,3.622 15.8,3.622 16.602,3.788 17.342,4.088 18.015,4.475 18.015,4.475 19.291,3.315 19.291,3.315 19.291,3.315 21.554,5.372 21.554,5.372 21.554,5.372 20.27,6.538 20.27,6.538 20.691,7.15 21.017,7.821 21.199,8.545 21.199,8.545 23,8.545 23,8.545 23,8.545 23,11.455 23,11.455 23,11.455 21.199,11.455 21.199,11.455 21.017,12.179 20.691,12.85 20.27,13.462 20.27,13.462 21.554,14.628 21.554,14.628 21.554,14.628 19.291,16.685 19.291,16.685 19.291,16.685 18.015,15.525 18.015,15.525 17.342,15.912 16.602,16.212 15.8,16.378 15.8,16.378 15.8,18 15.8,18 15.8,18 12.6,18 12.6,18 12.6,18 12.6,16.378 12.6,16.378 11.798,16.212 11.058,15.912 10.385,15.525 10.385,15.525 9.109,16.685 9.109,16.685 9.109,16.685 6.846,14.628 6.846,14.628 6.846,14.628 8.13,13.462 8.13,13.462 7.709,12.85 7.383,12.179 7.201,11.455 7.201,11.455 5.4,11.455 5.4,11.455 5.4,11.455 5.4,8.545 5.4,8.545 5.4,8.545 7.201,8.545 7.201,8.545 7.383,7.821 7.709,7.15 8.13,6.538 8.13,6.538 6.846,5.372 6.846,5.372 6.846,5.372 9.109,3.315 9.109,3.315 9.109,3.315 10.385,4.475 10.385,4.475 11.058,4.088 11.798,3.788 12.6,3.622 12.6,3.622 12.6,2 12.6,2z"/>
                                    <Setter Property="Height" TargetName="Icon" Value="28"/>
                                    <Setter Property="Width" TargetName="Icon" Value="24"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Name}" 
                                             Value="图件">
                                    <Setter Property="Data" TargetName="Icon" Value="F1M10,12C10,12 14,17 14,17 14,17 16,15 16,15 16,15 20,18 20,18 20,18 19,20 19,20 19,20 16,18 16,18 16,18 14,20 14,20 14,20 10,15 10,15 10,15 5,20 5,20 5,20 4,18 4,18 4,18 10,12 10,12z M16,11C16,11 20,11 20,11 20,11 20,13 20,13 20,13 16,13 16,13 16,13 16,11 16,11z M2.913,3.846C2.913,3.846 2.913,24.154 2.913,24.154 2.913,24.154 21.087,24.154 21.087,24.154 21.087,24.154 21,9 21,9 21,9 14,9 14,9 14,9 14,4 14,4 14,4 2.913,3.846 2.913,3.846z M1,2C1,2 15.348,2 15.348,2 15.348,2 23,8.414 23,8.468 23,15.577 23,26 23,26 23,26 1,26 1,26 1,26 1,2 1,2z"/>
                                    <Setter Property="Height" TargetName="Icon" Value="27"/>
                                    <Setter Property="Width" TargetName="Icon" Value="24"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Name}" 
                                             Value="生产预警">
                                    <Setter Property="Data" TargetName="Icon" Value="F1M12.5,19C13.328,19 14,19.672 14,20.5 14,21.328 13.328,22 12.5,22 11.672,22 11,21.328 11,20.5 11,19.672 11.672,19 12.5,19z M12.5,10C13.328,10 14,11.111 14,12.483 14,13.854 12.5,18 12.5,18 12.5,18 11,13.854 11,12.483 11,11.111 11.672,10 12.5,10z M12.5,6C11.924,6 11.433,6.311 11.167,6.844 11.167,6.844 4.25,20.706 4.25,20.706 4,21.208 4.017,21.761 4.298,22.245 4.579,22.728 5.041,23 5.583,23 5.583,23 19.417,23 19.417,23 19.959,23 20.421,22.728 20.702,22.245 20.983,21.761 21,21.208 20.75,20.706 20.75,20.706 13.833,6.844 13.833,6.844 13.567,6.311 13.076,6 12.5,6z M12.5,2C13.28,2 13.943,2.42 14.304,3.142 14.304,3.142 23.661,21.897 23.661,21.897 24,22.576 23.977,23.324 23.596,23.978 23.216,24.633 22.591,25 21.858,25 21.858,25 3.142,25 3.142,25 2.409,25 1.784,24.633 1.404,23.978 1.023,23.324 1,22.576 1.339,21.897 1.339,21.897 10.696,3.142 10.696,3.142 11.057,2.42 11.72,2 12.5,2z"/>
                                    <Setter Property="Height" TargetName="Icon" Value="27"/>
                                    <Setter Property="Width" TargetName="Icon" Value="25"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander Header="{TemplateBinding Content}"
                                                  HeaderTemplate="{TemplateBinding ContentTemplate}"
                                                  Background="Transparent"
                                                  BorderBrush="Transparent"
                                                  IsExpanded="True">
                                            <Border Margin="25,5"
                                                    BorderThickness="1,0,0,0"
                                                    BorderBrush="#FFC041">
                                                <ItemsPresenter></ItemsPresenter>
                                            </Border>
                                            <Expander.Template>
                                                <ControlTemplate TargetType="{x:Type Expander}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="True">
                                                        <DockPanel>
                                                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                <ToggleButton.Style>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Padding="{TemplateBinding Padding}">
                                                                                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                                                        </Grid>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ToggleButton.Style>
                                                            </ToggleButton>
                                                            <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </DockPanel>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsExpanded" Value="True">
                                                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                                        </Trigger>
                                                        <Trigger Property="ExpandDirection" Value="Right">
                                                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                                            <Setter Property="Style" TargetName="HeaderSite">
                                                                <Setter.Value>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Padding="{TemplateBinding Padding}">
                                                                                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                                            <Grid.RowDefinitions>
                                                                                                <RowDefinition Height="19"/>
                                                                                                <RowDefinition Height="*"/>
                                                                                            </Grid.RowDefinitions>
                                                                                            <Grid>
                                                                                                <Grid.LayoutTransform>
                                                                                                    <TransformGroup>
                                                                                                        <RotateTransform Angle="-90"/>
                                                                                                    </TransformGroup>
                                                                                                </Grid.LayoutTransform>
                                                                                                <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                                                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                                                            </Grid>
                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                                                        </Grid>
                                                                                    </Border>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsChecked" Value="True">
                                                                                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                                                            <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsPressed" Value="True">
                                                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                                                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                                                            <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                                                            <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                                                            <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="ExpandDirection" Value="Up">
                                                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                                            <Setter Property="Style" TargetName="HeaderSite">
                                                                <Setter.Value>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Padding="{TemplateBinding Padding}">
                                                                                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                                            <Grid.ColumnDefinitions>
                                                                                                <ColumnDefinition Width="19"/>
                                                                                                <ColumnDefinition Width="*"/>
                                                                                            </Grid.ColumnDefinitions>
                                                                                            <Grid>
                                                                                                <Grid.LayoutTransform>
                                                                                                    <TransformGroup>
                                                                                                        <RotateTransform Angle="180"/>
                                                                                                    </TransformGroup>
                                                                                                </Grid.LayoutTransform>
                                                                                                <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                                                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                                                            </Grid>
                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                                                        </Grid>
                                                                                    </Border>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsChecked" Value="True">
                                                                                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                                                            <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsPressed" Value="True">
                                                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                                                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                                                            <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                                                            <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                                                            <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="ExpandDirection" Value="Left">
                                                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                                            <Setter Property="Style" TargetName="HeaderSite">
                                                                <Setter.Value>
                                                                    <Style TargetType="{x:Type ToggleButton}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                    <Border Padding="{TemplateBinding Padding}">
                                                                                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                                            <Grid.RowDefinitions>
                                                                                                <RowDefinition Height="19"/>
                                                                                                <RowDefinition Height="*"/>
                                                                                            </Grid.RowDefinitions>
                                                                                            <Grid>
                                                                                                <Grid.LayoutTransform>
                                                                                                    <TransformGroup>
                                                                                                        <RotateTransform Angle="90"/>
                                                                                                    </TransformGroup>
                                                                                                </Grid.LayoutTransform>
                                                                                                <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                                                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                                                            </Grid>
                                                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                                                        </Grid>
                                                                                    </Border>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsChecked" Value="True">
                                                                                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                                                            <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsPressed" Value="True">
                                                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                                                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                                                            <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                                                            <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                                                            <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Expander.Template>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <ItemsPresenter></ItemsPresenter>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Title}" FontSize="14"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AlternationCount" Value="{Binding Items.Count,RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Padding" Value="15,1,5,1"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="#FF3D73D7"/>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="#FFFFBD3B"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="#FFFFBD3B"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="#FFFFBD3B"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,5,0,0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding (ItemsControl.AlternationIndex),RelativeSource={RelativeSource Self}}" Value="0">
                            <Setter Property="Margin" Value="0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 查询选项卡样式 -->
    <Style x:Key="QueryTabControlStyle" TargetType="telerik:RadTabControl" BasedOn="{StaticResource {x:Type telerik:RadTabControl}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HeaderBackground" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Title}" FontSize="14" Foreground="#FF676767"></TextBlock>
                        <Button cal:Message.Attach="CloseQuery($dataContext)" Margin="10,0,0,0">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"></VisualState>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames
													Storyboard.TargetProperty="(UIElement.Visibility)"
													Storyboard.TargetName="FocusEllipse">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Visible</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ColorAnimation Duration="0" To="#FFDC3030"
													Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
													Storyboard.TargetName="FocusEllipse" />
                                                        <ColorAnimation Duration="0" To="White"
                                                    Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
													Storyboard.TargetName="path" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames
													Storyboard.TargetProperty="(UIElement.Visibility)"
													Storyboard.TargetName="FocusEllipse">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Visible</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ColorAnimation Duration="0" To="Black"
													Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
													Storyboard.TargetName="FocusEllipse" />
                                                        <ColorAnimation Duration="0" To="White"
                                                    Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
													Storyboard.TargetName="path" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"></VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused" />
                                                <VisualState x:Name="Unfocused" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Ellipse x:Name="FocusEllipse" Fill="#FFF13535" Visibility="Collapsed"></Ellipse>
                                        <Path x:Name="path" Data="M0,0 L6,6 M6, 0 L0,6" Stroke="#FF898888" HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" StrokeThickness="1"></Path>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl cal:View.Model="{Binding Config.ViewModel}"></ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Padding" Value="15,1"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"></Setter>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="#FF676767"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="#FF516BD2"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="#FF516BD2"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="#FF516BD2"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,5,0,0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding (ItemsControl.AlternationIndex),RelativeSource={RelativeSource Self}}" Value="0">
                            <Setter Property="Margin" Value="0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <VisibilityToBooleanConverter x:Key="VisibilityToBooleanConverter"></VisibilityToBooleanConverter>
    <!-- 查询列选择 ListBox 样式 -->
    <Style x:Key="QueryColumnsSelectionListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="#FFFBFDFF"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#FF858181"/>
        <Setter Property="Padding" Value="20,20,0,0"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Padding" Value="15,1"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="#FF676767"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="#FF516BD2"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="#FF516BD2"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="#FF516BD2"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,5,0,0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding (ItemsControl.AlternationIndex),RelativeSource={RelativeSource Self}}"
                                     Value="0">
                            <Setter Property="Margin" Value="0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding Path=(query:GridViewColumnExtensions.Visibility), Converter={StaticResource VisibilityToBooleanConverter}, Mode=TwoWay}">
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="BorderBrush" Value="#FF5593FF"/>
                                    <Setter Property="Foreground" Value="#FF676767"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                                <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                        <Grid x:Name="markGrid">
                                                            <Path x:Name="optionMark" Data="F1M7.034,9.835C7.034,9.835 9.474,14.417 9.474,14.417 9.474,14.417 13.441,5.104 19.695,2 19.542,4.217 18.932,6.139 20,8.504 17.254,9.096 11.61,15.748 9.78,19 7.186,15.896 4.135,13.53 2,12.791 2,12.791 7.034,9.835 7.034,9.835z" Fill="#FFFFBD3B" Height="20" Canvas.Left="59" Canvas.Top="622" Width="21"
                                                                  Opacity="0"/>
                                                            <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                                                        </Grid>
                                                    </Border>
                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasContent" Value="True">
                                                        <Setter Property="FocusVisualStyle">
                                                            <Setter.Value>
                                                                <Style>
                                                                    <Setter Property="Control.Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate>
                                                                                <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Padding" Value="4,-1,0,0"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                                                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                                                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                                                        <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                                                        <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                                                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                                        <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="{x:Null}">
                                                        <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                                        <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <TextBlock Margin="10,0" Text="{Binding Header}" FontSize="14" Foreground="#FF676767"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>